{"version":3,"sources":["styles/GlobalStyle.js","lib/helpers.js","constants/actionTypes.js","reducers/auth.js","reducers/survey.js","reducers/audience.js","reducers/index.js","store/configureStore.js","components/Text.js","actions/ApiActions.js","constants/apiEndpoints.js","actions/AuthActions.js","components/Header.js","components/ScrollTop.js","pages/BasePage.js","components/Layout.js","components/Button.js","components/Input.js","components/SigninForm.js","components/Form.js","components/SignupForm.js","actions/SurveyActions.js","components/SurveyForm.js","components/Loading.js","actions/AudienceActions.js","components/AudienceForm.js","components/SurveyInviteForm.js","components/OptionButton.js","components/Survey.js","components/SurveyList.js","routes.js","pages/SurveyListPage.js","pages/SignupPage.js","pages/SigninPage.js","pages/LogoutPage.js","pages/SurveyCreatePage.js","pages/SurveyPage.js","pages/SurveyUpdatePage.js","App.js","index.js","styles/theme.js"],"names":["createGlobalStyle","media","Object","entries","xs","sm","md","lg","xl","xxl","reduce","accumulate","key","value","assign","css","RouteWithSubRoutes","route","path","render","props","component","routes","fillField","labelCol","span","wrapperCol","formHasError","fieldsError","some","field","errors","length","actionTypes","type","AUTH_GET_ME","AUTH_POST_SIGNUP","AUTH_POST_LOGOUT","InitialState","Record","getMe","postSignup","state","set","SURVEY_GET_LIST","SURVEY_GET","SURVEY_PUT","SURVEY_POST","SURVEY_DELETE","getListSurvey","OrderedMap","surveyPagination","page","total","limit","params","rows","count","d","v","id","liimt","setIn","removeIn","AUDIENCE_GET_LIST","getAudienceList","audiencePagination","history","combineReducers","auth","survey","audience","router","connectRouter","createBrowserHistory","basename","process","middlewares","thunk","configureStore","appliedMiddlewares","additionalMiddlewares","applyMiddleware","routerMiddleware","store","createStore","combinedReducers","token","sizes","xxs","s","m","l","styled","div","color","bold","size","REACT_APP_API_URL","AUTH_POST_SIGNIN","AUDIENCE_POST","AUDIENCE_POST_INVITE","str","obj","keys","p","c","split","join","API_SET","headers","Accept","reqFunctions","post","url","query","opts","getToken","options","method","Authorization","body","dispatch","onRequest","apiFetch","get","queryString","qs","stringify","allowDots","delete","put","window","localStorage","getItem","setToken","newToken","setItem","dispatchRequest","onError","include","a","toLowerCase","request","response","error","onResponse","JSON","fetch","authToken","json","status","data","errorObj","Error","detail","meta","message","content","statusCode","duration","API","withRouter","useDispatch","useState","background","setBackground","mobileMenu","setMobileMenu","useSelector","userRef","React","useRef","useEffect","AuthActions","isCancelled","addEventListener","pageYOffset","current","setStop","menus","icon","ProfileOutlined","text","to","push","PlusOutlined","LogoutOutlined","HeaderWrapper","HeaderContent","className","Text","BurgerButton","onClick","UnorderedListOutlined","MenuWrapper","show","Menu","CloseButton","onclick","CloseSquareOutlined","map","menu","MenuLink","fadeIn","keyframes","Link","theme","headerHeight","contentWidth","Layout","Header","ScrollToTop","location","useLocation","previous","ref","usePrevious","action","pathname","search","scrollTo","MainContent","Content","AuthBox","boxBgColor","htmlType","children","loading","StyledButton","LoadingOutlined","button","fontFamily","disabled","default","style","StyledInput","Input","Password","StyledSelect","AntSelect","attrs","getPopupContainer","trigger","parentNode","Select","Option","submitting","setSubmitting","formRef","onFinish","validateFields","then","values","catch","Item","name","label","rules","required","inputMode","autoCorrect","autoCapitalize","autoComplete","noStyle","shouldUpdate","getFieldsError","Button","width","Form","AntForm","success","setSuccess","handleSubmit","setFields","result","forEach","as","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","getSurvey","postSurvey","initialValues","title","Options","SurveyActions","List","fields","add","index","getFieldsValue","setFieldsValue","splice","ErrorList","LoadingWrapper","getAudience","parse","setAudience","postAudience","questionId","onCancel","AudienceActions","getAudiences","audiences","toIndexedSeq","toArray","mode","placeholder","email","option","totalAnswers","audienceAnswer","percentage","Answers","toFixed","isOptionAnswer","OptionId","OptionIcon","CheckCircleTwoTone","twoToneColor","BorderOutlined","percent","showInfo","OptionButton","modal","setModal","inviteModal","setInviteModal","handleClick","acc","find","answer","Audience","SurveyWrapper","Loading","Question","visible","footer","AudienceForm","SurveyInviteForm","Modal","confirm","ExclamationCircleOutlined","onOk","surveys","Survey","defaultCurrent","pageSize","onChange","i","substring","Helmet","SurveyList","exact","SignupForm","SigninForm","res","SurveyForm","match","Number","locale","enUS","GlobalStyle","defaultTitle","titleTemplate","ReactDOM","headerColor","App","document","getElementById"],"mappings":"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","file":"static/js/main.c5eb77cb.chunk.js","sourcesContent":["import {createGlobalStyle} from \"styled-components\";\n\nexport default createGlobalStyle`\n  html, body {\n    font-family: Open Sans, serif !important;\n    font-size: 14px;\n    background: #f1f1f1 !important;\n    font-weight: 400;\n    color: #333;\n    line-height: 1.2;\n    min-height: 100vh;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  #root {\n    width: 100%;\n    overflow: hidden;\n  }\n\n  // helpers\n  \n  .relative {\n    position: relative;\n  }\n\n  .text-center {\n    text-align: center;\n  }\n\n  .text-left {\n    text-align: left;\n  }\n\n  .text-right {\n    text-align: right;\n  }\n\n  .fill {\n    width: 100%;\n  }\n\n  .mb30 {\n    margin-bottom: 30px;\n  }\n  .mt20 {\n    margin-top: 20px;\n  }\n  .mt30 {\n    margin-top: 30px;\n  }\n  .mr5 {\n    margin-right: 5px;\n  }\n  .mr20 {\n    margin-right: 20px;\n  }\n\n  .pv10 {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n  .ph30 {\n    padding-left: 30px;\n    padding-right: 30px;\n  }\n\n  .flex-1 {\n    flex: 1 !important;\n  }\n  .flex-2 {\n    flex: 2 !important;\n  }\n  .flex-v {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n  }\n  .flex-v.flex-end {\n    align-items: flex-end;\n    justify-content: flex-end;\n  }\n  .flex-v.flex-start {\n    align-items: flex-start !important;\n  }\n  .flex-v.flex-center {\n    justify-content: center;\n  }\n  .flex-h {\n    display: flex !important;\n    flex-direction: row;\n  }\n  .flex-h.flex-end {\n    align-items: flex-end;\n    justify-content: flex-end;\n  }\n  .flex-h.flex-start {\n    align-items: flex-start !important;\n  }\n  .flex-h.flex-center {\n    justify-content: center;\n    align-items: center;\n  }\n\n`;\n","import React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport {css} from \"styled-components\";\nimport qs from \"qs\";\n\nexport const dimensionMap = {\n  xs: '480px',\n  sm: '576px',\n  md: '768px',\n  lg: '992px',\n  xl: '1200px',\n  xxl: '1600px',\n};\n\nexport const media = Object.entries(dimensionMap).reduce(\n  (accumulate, [key, value]) => (\n    Object.assign(accumulate, {\n      [key]: (...args) => (\n        css`\n          @media (max-width: ${value}) {\n            ${css(...args)}\n          }\n        `\n      ),\n    })\n  ),\n  {},\n);\n\nexport const RouteWithSubRoutes = (route) => (\n  <Route\n    path={route.path}\n    render={props => (\n      // pass the sub-routes down to keep nesting\n      <route.component {...props} routes={route.routes} />\n    )}\n  />\n);\n\nexport const fillField = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n  },\n};\n\nexport const formHasError = fieldsError => fieldsError.some(field => field.errors.length);\n\nexport const getQuery = (location) => qs.parse((location.search || \"\").substring(1), {allowDots: true}) || {};\n","const actionTypes = [\n  \"API_SET\",\n\n  \"AUTH_POST_SIGNUP\",\n  \"AUTH_POST_SIGNIN\",\n  \"AUTH_POST_LOGOUT\",\n  \"AUTH_GET_ME\",\n\n  \"SURVEY_POST\",\n  \"SURVEY_GET\",\n  \"SURVEY_GET_LIST\",\n  \"SURVEY_PUT\",\n  \"SURVEY_DELETE\",\n\n  \"AUDIENCE_POST\",\n  \"AUDIENCE_GET_LIST\",\n  \"AUDIENCE_POST_INVITE\",\n].reduce((\n  actionTypes,\n  type,\n) => ({\n  ...actionTypes,\n  [type]: type,\n}), {});\n\nexport default actionTypes;\n","import {Record} from \"immutable\";\nimport actionTypes from \"../constants/actionTypes\";\n\nconst {\n  AUTH_GET_ME,\n  AUTH_POST_SIGNUP,\n  AUTH_POST_LOGOUT,\n} = actionTypes;\n\nconst InitialState = new Record({\n  getMe: false,\n  postSignup: false,\n});\n\nexport default (\n  state = new InitialState(),\n  {\n    type,\n    value,\n  },\n) => {\n  switch (type) {\n    case AUTH_GET_ME: {\n      return state.set(\"getMe\", value);\n    }\n    case AUTH_POST_SIGNUP: {\n      return state.set(\"postSignup\", value);\n    }\n    case AUTH_POST_LOGOUT:\n      return state.set(\"getMe\", false);\n    default:\n      return state;\n  }\n};\n","import {Record, OrderedMap} from \"immutable\";\n\nimport actionTypes from \"../constants/actionTypes\";\n\nconst {\n  SURVEY_GET_LIST,\n  SURVEY_GET,\n  SURVEY_PUT,\n  SURVEY_POST,\n  SURVEY_DELETE,\n} = actionTypes;\n\nconst InitialState = new Record({\n  getListSurvey: new OrderedMap(),\n  surveyPagination: {\n    page: 0,\n    total: 0,\n    limit: 0,\n  },\n});\n\nexport default (\n  state = new InitialState(),\n  {\n    value,\n    type,\n    params,\n  },\n) => {\n  switch (type) {\n    case SURVEY_GET_LIST: {\n      const {rows, count} = value;\n      return state\n        .set(\n          \"getListSurvey\",\n          rows.reduce((d, v) => d.set(v.id, v), new OrderedMap()),\n        )\n        .set(\"surveyPagination\", {\n          page: params.page,\n          liimt: params.limit,\n          total: count,\n        });\n    }\n\n    case SURVEY_GET:\n    case SURVEY_PUT:\n    case SURVEY_POST: {\n      return state\n        .setIn([\n          \"getListSurvey\",\n          value.id,\n        ],\n        value);\n    }\n\n    case SURVEY_DELETE:\n      return state\n        .removeIn([\n          \"getListSurvey\",\n          params.id,\n        ]);\n\n    default:\n      return state;\n  }\n};\n","import {Record, OrderedMap} from \"immutable\";\n\nimport actionTypes from \"../constants/actionTypes\";\n\nconst {\n  AUDIENCE_GET_LIST,\n} = actionTypes;\n\nconst InitialState = new Record({\n  getAudienceList: new OrderedMap(),\n  audiencePagination: {\n    page: 0,\n    total: 0,\n    limit: 0,\n  },\n});\n\nexport default (\n  state = new InitialState(),\n  {\n    value,\n    type,\n    params,\n  },\n) => {\n  switch (type) {\n    case AUDIENCE_GET_LIST: {\n      const {rows, count} = value;\n      return state\n        .set(\n          \"getAudienceList\",\n          rows.reduce((d, v) => d.set(v.id, v), new OrderedMap()),\n        )\n        .set(\"audiencePagination\", {\n          page: params.page,\n          liimt: params.limit,\n          total: count,\n        });\n    }\n\n    default:\n      return state;\n  }\n};\n","import {combineReducers} from \"redux\";\nimport {connectRouter} from \"connected-react-router\";\n\nimport auth from \"./auth\";\nimport survey from \"./survey\";\nimport audience from \"./audience\";\n\nexport default history => combineReducers({\n  auth,\n  survey,\n  audience,\n  router: connectRouter(history),\n});\n","// @flow\n\nimport {createStore, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { createBrowserHistory } from \"history\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport combinedReducers from \"../reducers\";\n\nconst {\n  REACT_APP_BASENAME,\n} = process.env;\n\nexport const history = createBrowserHistory({basename: REACT_APP_BASENAME});\n\nconst middlewares = [thunk];\n\nfunction configureStore(additionalMiddlewares: Array<any> = [] /*initialState = undefined*/) {\n  let appliedMiddlewares;\n  if (process.env.NODE_ENV !== 'production') {\n    appliedMiddlewares = composeWithDevTools(\n      applyMiddleware(\n        ...middlewares,\n        ...additionalMiddlewares,\n        routerMiddleware(history),\n      ),\n    );\n  } else {\n    appliedMiddlewares = applyMiddleware(\n      ...middlewares,\n      ...additionalMiddlewares,\n      routerMiddleware(history),\n    );\n  }\n  const store = createStore(\n    combinedReducers(history),\n    appliedMiddlewares,\n  );\n  return store;\n}\n\nexport default configureStore;\n","import styled from \"styled-components\";\n\nconst sizes = {\n  xxs: `\n    font-size: 12px !important;\n    line-height: 20px;\n  `,\n  xs: `\n    font-size: 14px !important;\n    line-height: 22px;\n  `,\n  s: `\n    font-size: 16px !important;\n    line-height: 24px;\n  `,\n  m: `\n    font-size: 20px !important;\n    line-height: 28px;\n  `,\n  l: `\n    font-size: 24px !important;\n    line-height: 32px;\n  `,\n  xl: `\n    font-size: 30px !important;\n    line-height: 38px;\n  `,\n  xxl: `\n    font-size: 58px !important;\n    line-height: 66px;\n  `,\n};\n\nexport default styled.div`\n  ${props => (props.color && `color: ${props.color};`)}\n  ${props => (props.bold && \"font-weight: 800;\")}\n\n  ${props => sizes[props.size || \"xs\"]};\n`;\n","import qs from \"qs\";\nimport {message} from \"antd\";\n\nimport actionTypes from \"../constants/actionTypes\";\n\nconst {\n  API_SET,\n  AUTH_GET_ME,\n} = actionTypes;\n\nconst headers = {\n  \"Content-Type\": 'application/json',\n  Accept: \"application/json\",\n};\n\nconst reqFunctions = {\n  post: apiPost,\n  get: apiGet,\n  delete: apiDelete,\n  put: apiPut,\n};\n\nlet token;\n\nexport function getToken() {\n  token = token || window.localStorage.getItem('token');\n  return token;\n}\n\nexport function setToken(newToken) {\n  token = newToken;\n  window.localStorage.setItem('token', token);\n}\n\nexport const dispatchRequest = ({\n  method,\n  url,\n  type,\n  params,\n  onError,\n  include = {},\n  opts = {},\n}) => (\n  async (dispatch) => {\n    const m = method.toLowerCase();\n    const request = reqFunctions[m](url, params, opts);\n    const response = await dispatch(request);\n    if (!response.error) {\n      dispatch({\n        type,\n        value: response,\n        params: {\n          ...params,\n          ...include,\n        },\n      });\n    }\n    if (response.error) {\n      if (onError) {\n        onError(dispatch);\n      }\n    }\n    return response;\n  }\n);\n\nfunction onRequest() {\n  return {\n    type: API_SET,\n    key: \"loading\",\n    value: true,\n  };\n}\n\nfunction onResponse(response: Object) {\n  return (dispatch: any) => {\n    dispatch({type: API_SET, key: \"loading\", value: false});\n    dispatch({type: API_SET, key: \"success\", value: response});\n    return response;\n  };\n}\n\nfunction apiFetch(url, options) {\n  return async (dispatch: Function) => {\n    const {\n      headers: {\n        ...headers\n      },\n      ...opts\n    } = options;\n    opts.body = JSON.stringify(opts.body);\n\n    try {\n      const response = await fetch(url, {\n        ...opts,\n        headers,\n      });\n      const authToken = response.headers.get(\"authorization\") || response.headers.get(\"Authorization\");\n      if (authToken) {\n        setToken(authToken);\n      }\n      const json = await response.json();\n\n      if (response.status >= 200 && response.status < 300) {\n        return dispatch(onResponse(json));\n      }\n      return dispatch(onError(json));\n    } catch (error) {\n      if (error.response) {\n        return dispatch(onError(error.response.data));\n      }\n      if (error.request) {\n        return dispatch(onError(error));\n      }\n      return dispatch(onError(error));\n    }\n  };\n}\n\nexport function apiGet(url: string, query?: Object, opts?: Object) {\n  const token = getToken();\n  const options = {\n    ...opts,\n    method: \"GET\",\n    headers: {...headers, Authorization: token},\n  };\n  const queryString = query && `?${qs.stringify(query, { allowDots: true })}`;\n  return (dispatch: Function) => {\n    dispatch(onRequest());\n    return dispatch(apiFetch(`${url}${queryString || \"\"}`, options));\n  };\n}\n\nexport function apiPost(url: string, query?: Object, opts?: Object) {\n  const token = getToken();\n  const options = {\n    ...opts,\n    method: \"POST\",\n    headers: {...headers, Authorization: token},\n    body: query,\n  };\n  return (dispatch: Function) => {\n    dispatch(onRequest());\n    return dispatch(apiFetch(url, options));\n  };\n}\n\nexport function apiDelete(url: string, query?: Object, opts?: Object) {\n  const token = getToken();\n  const options = {\n    ...opts,\n    method: \"DELETE\",\n    headers: {...headers, Authorization: token},\n  };\n  const queryString = query && `?${qs.stringify(query, { allowDots: true })}`;\n  return (dispatch: Function) => {\n    dispatch(onRequest());\n    return dispatch(apiFetch(`${url}${queryString || \"\"}`, options));\n  };\n}\n\nexport function apiPut(url: string, query?: Object, opts?: Object) {\n  const token = getToken();\n  const options = {\n    ...opts,\n    method: \"PUT\",\n    headers: {...headers, Authorization: token},\n    body: query,\n  };\n  return (dispatch: Function) => {\n    dispatch(onRequest());\n    return dispatch(apiFetch(url, options));\n  };\n}\n\nfunction onError(response: Object) {\n  return (dispatch) => {\n    dispatch({type: API_SET, key: \"loading\", value: false});\n    let errorObj = {};\n    if (response instanceof Error || typeof response === \"string\") {\n      // Unexpected errors\n      const detail = \"Unexpected Error\";\n      errorObj = {\n        error: \"unexpected\",\n        detail,\n        meta: null,\n      };\n      message.error({\n        content: detail,\n        key: \"unexpected\",\n      });\n\n    } else {\n      // expect error in JSON format\n      const {\n        error = \"unexpected\",\n        key,\n        detail,\n        id,\n        meta = {},\n        status,\n        statusCode, // default error from hapi\n      } = response;\n\n      errorObj = {\n        error,\n        key,\n        id,\n        status,\n        detail,\n        meta,\n      };\n      if (statusCode && statusCode !== 401) {\n        message.error({\n          content: `error_${statusCode}`,\n          key: statusCode,\n        });\n      } else if (statusCode === 401) {\n        // unauthorized\n        errorObj.error = \"error_401\";\n        // logout from client\n        dispatch({type: AUTH_GET_ME, value: {}});\n        setToken(null);\n      }\n    }\n\n    if (errorObj.key) {\n      message.error({\n        content: `${errorObj.key} ${errorObj.detail}`,\n        duration: 10,\n        key: errorObj.key,\n      });\n    }\n\n    dispatch({type: API_SET, key: \"error\", value: errorObj});\n    return errorObj;\n  };\n}\n","const {\n  REACT_APP_API_URL,\n} = process.env;\n\nexport default {\n  // AUTH\n  AUTH_POST_SIGNUP: `${REACT_APP_API_URL}/auth/signup`,\n  AUTH_POST_SIGNIN: `${REACT_APP_API_URL}/auth/signin`,\n  AUTH_GET_ME: `${REACT_APP_API_URL}/auth/me`,\n  AUTH_POST_LOGOUT: `${REACT_APP_API_URL}/auth/logout`,\n\n  // SURVEY\n  SURVEY_POST: `${REACT_APP_API_URL}/surveys`,\n  SURVEY_GET: `${REACT_APP_API_URL}/surveys/{id}`,\n  SURVEY_GET_LIST: `${REACT_APP_API_URL}/surveys`,\n  SURVEY_PUT: `${REACT_APP_API_URL}/surveys/{id}`,\n  SURVEY_DELETE: `${REACT_APP_API_URL}/surveys/{id}`,\n\n  // AUDIENCE\n  AUDIENCE_POST: `${REACT_APP_API_URL}/audiences`,\n  AUDIENCE_GET_LIST: `${REACT_APP_API_URL}/audiences`,\n  AUDIENCE_POST_INVITE: `${REACT_APP_API_URL}/audiences/invite`,\n};\n\nexport const render = (str, obj) => (\n  Object.keys(obj).reduce((p, c) => p.split(`{${c}}`).join(obj[c]), str)\n);\n","// @flow\n\nimport actionTypes from \"../constants/actionTypes\";\n\nimport API from \"../constants/apiEndpoints\";\nimport {\n  dispatchRequest,\n  setToken,\n} from \"./ApiActions\";\n\nconst {\n  AUTH_POST_SIGNUP,\n  AUTH_POST_SIGNIN,\n  AUTH_POST_LOGOUT,\n  AUTH_GET_ME,\n} = actionTypes;\n\nexport function postSignup(params) {\n  return dispatchRequest({\n    method: \"post\",\n    url: API[AUTH_POST_SIGNUP],\n    params,\n    type: AUTH_POST_SIGNUP,\n  });\n}\n\nexport function postSignin(params) {\n  return dispatchRequest({\n    method: \"post\",\n    url: API[AUTH_POST_SIGNIN],\n    params,\n    type: AUTH_POST_SIGNIN,\n  });\n}\n\nexport function getMe() {\n  return dispatchRequest({\n    method: \"get\",\n    url: API[AUTH_GET_ME],\n    type: AUTH_GET_ME,\n    onError: (dispatch) => {\n      dispatch({type: AUTH_POST_LOGOUT});\n    },\n  });\n}\n\nexport function postLogout() {\n  return dispatch => dispatchRequest({\n    method: \"post\",\n    url: API[AUTH_POST_LOGOUT],\n    type: AUTH_POST_LOGOUT,\n  })(dispatch).then((res) => {\n    if (res && !res.error) {\n      setToken(null);\n    }\n  });\n}\n","import React, {useState, useEffect} from 'react';\nimport {Link, withRouter} from \"react-router-dom\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {Layout} from \"antd\";\nimport {\n  CloseSquareOutlined,\n  UnorderedListOutlined,\n  LogoutOutlined,\n  PlusOutlined,\n  ProfileOutlined,\n} from '@ant-design/icons';\nimport styled, {keyframes} from \"styled-components\";\n\nimport Text from \"./Text\";\nimport {media} from \"../lib/helpers\";\nimport * as AuthActions from \"../actions/AuthActions\";\n\nexport default withRouter(() => {\n  const dispatch = useDispatch();\n  const [background, setBackground] = useState(\"transparent\");\n  const [mobileMenu, setMobileMenu] = useState(false);\n  const getMe = useSelector(state => state.auth.get(\"getMe\"));\n  const userRef = React.useRef();\n\n  useEffect(() => {\n    dispatch(AuthActions.getMe());\n    let isCancelled = false;\n    const handleScroll = () => {\n      if (isCancelled) {\n        return;\n      }\n      if (window.pageYOffset > 0) {\n        setBackground(\"white\");\n      } else {\n        setBackground(\"transparent\");\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      isCancelled = true;\n      if (userRef && userRef.current) {\n        userRef.current.setStop(true);\n      }\n\n    };\n  }, []);\n\n  const menus = [{\n    icon: () => <ProfileOutlined />,\n    text: \"Surveys\",\n    to: \"/\",\n  }];\n  if (getMe) {\n    menus.push({\n      icon: () => <PlusOutlined />,\n      text: \"Create Question\",\n      to: \"/survey/create\",\n    });\n    menus.push({\n      text: \"Logout\",\n      to: \"/logout\",\n      icon: () => <LogoutOutlined />,\n    });\n  } else {\n    menus.push({\n      icon: () => \"\",\n      text: \"Sign up\",\n      to: \"/signup\",\n    });\n    menus.push({\n      icon: () => \"\",\n      text: \"Sign in\",\n      to: \"/signin\",\n    });\n  }\n\n  return (\n    <HeaderWrapper background={background}>\n      <HeaderContent type=\"default\" className=\"flex-h flex-1\">\n        <div className=\"flex-start flex-v flex-center flex-1\">\n          <Link to=\"/\"><Text size=\"l\" bold color=\"#333\">Survey</Text></Link>\n        </div>\n\n        <BurgerButton\n          className=\"ph10 flex-v flex-center\"\n          onClick={() => {\n            setMobileMenu(true);\n          }}\n        >\n          <UnorderedListOutlined />\n        </BurgerButton>\n        <MenuWrapper\n          className=\"flex-2\"\n          show={mobileMenu}\n          onClick={() => {\n            setMobileMenu(false);\n          }}\n        >\n          <Menu>\n            <CloseButton onclick={() => setMobileMenu(false)}>\n              <CloseSquareOutlined />\n            </CloseButton>\n\n            {menus.map((menu) => (\n              <MenuLink to={menu.to} className=\"flex-v flex-center\" key={menu.to}>\n                <div className=\"flex-h flex-center\">\n                  <div className=\"mr5\">{menu.icon()}</div>\n                  <Text>{menu.text}</Text>\n                </div>\n              </MenuLink>\n            ))}\n          </Menu>\n        </MenuWrapper>\n      </HeaderContent>\n    </HeaderWrapper>\n  );\n});\n\nconst fadeIn = keyframes`\n  from {\n    transform: translateX(-500px);\n    opacity: 0;\n  }\n\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n`;\n\nconst CloseButton = styled.div`\n  font-size: 30px;\n  position: absolute;\n  right: -30px;\n  top: 15px;\n  background: white;\n  \n  ${media.md`\n    display: inline-block;\n  `}\n`;\nconst MenuWrapper = styled.div`\n  background: transparent;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: flex-end;\n\n  ${media.md`\n    display: ${props => (props.show ? \"flex\" : \"none\")};\n    position: fixed;\n    background: rgba(255, 255, 255, 0.5);\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: 555;\n  `}\n`;\n\nconst Menu = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  ${media.md`\n    animation: ${fadeIn} 0.3s linear;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    background: #fff;\n    padding: 20px 20px;\n    flex-direction: column;\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5);\n    min-width: 50vw;\n  `}\n`;\n\nconst MenuLink = styled(Link)`\n  color: #333;\n  align-items: center;\n  height: ${props => props.theme.headerHeight};\n  font-size: 16px;\n  font-weight: bold;\n  padding: 0 20px;\n  text-align: center;\n  border-bottom: 1px solid transparent;\n\n  &:hover {\n    border-bottom: 1px solid #5b40bb;\n  }\n  &:active {\n    opacity: 0.9;\n  }\n  ${media.md`\n    padding: 10px;\n    margin: 10px 0;\n    height: auto;\n    width: 100%;\n    align-items: flex-start;\n  `}\n`;\n\nconst HeaderContent = styled.div`\n  width: 100%;\n  max-width: ${props => props.theme.contentWidth}px;\n  margin: auto;\n  height: ${props => props.theme.headerHeight};\n  ${media.md`\n    padding: 0 10px;\n  `}\n`;\n\nconst HeaderWrapper = styled(Layout.Header)`\n  z-Index: 12;\n  position: fixed;\n  width: 100%;\n  padding: 0;\n  color: #333;\n  height: ${props => props.theme.headerHeight};\n  line-height: 1;\n  background: ${props => props.background} !important;\n  ${props => `\n    background: ${props.background} !important;\n    box-shadow: ${props.background === \"transparent\" ? \"none\" : \"0 0 10px 0px rgba(0, 0, 0, 0.2)\"};\n  `}\n`;\n\nconst BurgerButton = styled.div`\n  font-size: 25px;\n  display: none !important;\n  ${media.md`\n    display: flex !important;\n  `}\n`;\n","import { useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport {history} from \"../store/configureStore\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function ScrollToTop() {\n  const location = useLocation();\n  const previous = usePrevious(location) || {};\n  useEffect(() => {\n\n    if (history.action !== \"POP\" && (`${previous.pathname}${previous.search}` !== `${location.pathname}${location.search}`)) {\n      window.scrollTo(0, 0);\n    }\n  }, [previous, location]);\n\n  return null;\n}\n","// @flow\n\nimport React from 'react';\nimport styled from \"styled-components\";\nimport {Switch} from \"react-router-dom\";\nimport {Layout} from \"antd\";\n\nimport {history} from \"../store/configureStore\";\nimport Header from \"../components/Header\";\nimport {RouteWithSubRoutes} from \"../lib/helpers\";\nimport ScrollTop from \"../components/ScrollTop\";\n\nexport default ({\n  routes,\n}) => (\n  <>\n    <ScrollTop />\n    <Header history={history} />\n    <MainContent>\n      {routes.map((route, i) => route.component && (\n        <Switch key={i}>\n          <RouteWithSubRoutes {...route} />\n        </Switch>\n      ))}\n    </MainContent>\n  </>\n);\n\nconst MainContent = styled(Layout)`\n  margin: 0;\n  min-height: 100vh;\n  background: transparent !important;\n`;\n","import styled from \"styled-components\";\n\nimport {media} from \"../lib/helpers\";\n\nexport const Content = styled.div`\n  z-index: 1;\n  max-width: ${props => props.theme.contentWidth}px;\n  width: 100%;\n  margin: calc(20px + ${props => props.theme.headerHeight}) auto 0 auto;\n  padding: 0;\n\n  ${media.md`\n    padding: 0 10px;\n  `}\n`;\n\nexport const AuthBox = styled.div`\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  padding: 30px;\n  background: ${props => props.theme.boxBgColor};\n  border-radius: 8px;\n  max-width: 450px;\n  margin: 10px auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {LoadingOutlined} from \"@ant-design/icons\";\n\nexport default ({\n  className,\n  htmlType,\n  children,\n  loading,\n  ...props\n}) => (\n  <StyledButton\n    {...props}\n    loading={loading}\n    type={htmlType}\n    className={className}\n  >\n    <div className=\"flex-h flex-center\">\n      {!!loading && (<div className=\"flex-v mr5\"><LoadingOutlined /></div>)}\n      <div>{children}</div>\n    </div>\n  </StyledButton>\n);\n\nconst StyledButton = styled.button`\n  font-family: ${props => props.theme.fontFamily} !important;\n  display: inline-block;\n  border: 0;\n  font-style: normal;\n  font-weight: 600;\n  outline: none;\n  cursor: pointer;\n  white-space: nowrap;\n  border-radius: 5px;\n\n  color: white !important;\n  background-color: rgb(84, 105, 212);\n  &:hover {\n    transition: all 0.1s; \n    box-shadow: 0px 0px 5px rgb(84, 105, 212);\n  }\n\n  &:active {\n    opacity: 0.8;\n  }\n\n  ${props => !!props.disabled && `\n    opacity: 0.5;\n  `}\n\n  ${props => ({\n    m: `\n      font-size: 16px;\n      line-height: 24px;\n      padding: 10px 16px;\n    `,\n    s: `\n      font-size: 12px;\n      line-height: 14px;\n      padding: 4px 9px;\n    `,\n    xs: `\n      font-size: 10px;\n      line-height: 12px;\n      padding: 2px 9px;\n    `,\n\n    default: `\n      padding: 7px 15px;\n      font-size: 14px;\n      line-height: 24px !important;\n    `,\n  })[props.size || \"default\"]}\n`;\n","import styled from \"styled-components\";\nimport {Input, Select as AntSelect} from \"antd\";\n\nconst style = props => `\n  font-family: ${props.theme.fontFamily};\n  font-size: 15px;\n  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.15), inset 0 1px 0 0 rgba(0, 0, 0, 0.08);\n  background-color: rgba(255, 255, 255, 0.7) !important;\n  transition: none;\n  border: 1px solid transparent !important;\n  padding: 7px 14px !important;\n  &:focus {\n    box-shadow: inset 0 0 0 1px #5426ff, inset 0 1px 0 0 #5426ff !important;\n  }\n\n  &:focus-within {\n    outline: none;\n    box-shadow: inset 0 0 0 1px #5426ff, inset 0 1px 0 0 #5426ff !important;\n  }\n\n  .has-error {\n    border: 1px solid #f5222d !important;\n  }\n\n  input {\n    outline: none !important;\n  }\n\n`;\n\nconst StyledInput = styled(Input)`\n  ${props => style(props)}\n`;\n\nStyledInput.Password = styled(Input.Password)`\n  ${props => style(props)}\n`;\n\nexport default StyledInput;\n\nexport const StyledSelect = styled(AntSelect).attrs({\n  getPopupContainer: trigger => trigger.parentNode,\n})`\n  ${props => style(props)}\n  & {\n    padding: 0 !important;\n    border: 0;\n  }\n  .ant-select-selector {\n    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.15), inset 0 1px 0 0 rgba(0, 0, 0, 0.08);\n    border: 0 !important;\n    min-height: 37px !important;\n    height: auto !important;\n  }\n  &.ant-select-focused {\n    .ant-select-selector {\n      box-shadow: inset 0 0 0 1px #5426ff, inset 0 1px 0 0 #5426ff !important;\n    }\n  }\n\n  &.ant-select-multiple {\n    .ant-select-selection-item {\n      line-height: 20px !important;\n    }\n  }\n  .tag {\n    border: 1px solid #333;\n    padding: 3px 5px;\n  }\n`;\n\nexport const Select = StyledSelect;\nSelect.Option = StyledSelect.Option;\n","import React, {useRef, useState} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {Form, Row, Col} from \"antd\";\n\nimport Button from \"./Button\";\nimport Input from \"./Input\";\nimport Text from \"./Text\";\n\nimport {fillField, formHasError} from \"../lib/helpers\";\nimport {history} from \"../store/configureStore\";\nimport * as AuthActions from \"../actions/AuthActions\";\n\nexport default () => {\n  const dispatch = useDispatch();\n  const [submitting, setSubmitting] = useState(false);\n  const formRef = useRef();\n\n  const handleSubmit = () => {\n    const {\n      validateFields,\n    } = formRef.current;\n\n    setSubmitting(true);\n    validateFields().then(async (values) => {\n      await dispatch(AuthActions.postSignin(values));\n      setSubmitting(false);\n\n      dispatch(AuthActions.getMe());\n      history.push(\"/\");\n    }).catch(() => {\n      setSubmitting(false);\n    });\n  };\n\n  return (\n    <Form onFinish={handleSubmit} ref={formRef}>\n      <Row type=\"flex\">\n        <Col xs={24} className=\"mb30\">\n          <Text size=\"l\">Sign in</Text>\n        </Col>\n        <Col xs={24} sm={24} className=\"pb30 pt20\">\n          <Form.Item\n            {...fillField}\n            name=\"email\"\n            label=\"EMAIL\"\n            rules={[{\n              type: \"email\",\n              required: true,\n              message: \"EMAIL is required\",\n            }]}\n          >\n            <Input\n              inputMode=\"email\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"none\"\n              autoComplete=\"new-password\"\n              type=\"email\"\n              className=\"fill\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            {...fillField}\n            name=\"password\"\n            label=\"PASSWORD\"\n            rules={[{\n              required: true,\n              message: \"PASSWORD is required\",\n            }]}\n            className=\"fill\"\n          >\n            <Input.Password\n              autoComplete=\"new-password\"\n              type=\"password\"\n              className=\"fill\"\n            />\n          </Form.Item>\n          <div className=\"text-center\">\n            <Form.Item noStyle shouldUpdate={() => true}>\n              {({getFieldsError}) => (\n                <div>\n                  <Button\n                    background=\"primary\"\n                    disabled={submitting || formHasError(getFieldsError())}\n                    loading={submitting ? 1 : 0}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"fill\"\n                    width=\"220px\"\n                    bold\n                  >\n                    Sign in\n                  </Button>\n                </div>\n              )}\n            </Form.Item>\n          </div>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n","import {Form as AntForm} from \"antd\";\nimport styled from \"styled-components\";\n\nconst Form = AntForm;\n\nForm.Item = styled(AntForm.Item)`\n  .ant-form-item-label, label {\n    display: block;\n    line-height: 14px !important;\n    height: auto !important;\n    font-family: ${props => props.theme.fontFamily};\n    font-size: 12px;\n    font-weight: 600 !important;\n    color: #333;\n    padding-bottom: 0;\n    margin-bottom: 2px;\n    text-align: left;\n  }\n  .ant-form-item-required {\n    &:before, &:after {\n      content: none;\n    }\n  }\n`;\n\nexport default Form;\n","import React, {useRef, useState} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {Row, Col} from \"antd\";\nimport {Link} from \"react-router-dom\";\n\nimport Form from \"./Form\";\nimport Button from \"./Button\";\nimport Input from \"./Input\";\nimport Text from \"./Text\";\n\nimport {fillField, formHasError} from \"../lib/helpers\";\nimport * as AuthActions from \"../actions/AuthActions\";\n\nexport default () => {\n  const dispatch = useDispatch();\n  const [submitting, setSubmitting] = useState(0);\n  const [success, setSuccess] = useState(0);\n  const formRef = useRef();\n  const handleSubmit = async () => {\n    const {\n      validateFields,\n      setFields,\n    } = formRef.current;\n    setSubmitting(1);\n    try {\n      const values = await validateFields();\n      const result = await dispatch(AuthActions.postSignup(values));\n      setSubmitting(0);\n\n      if (result.error) {\n        const errors = [];\n        Object.keys(result.meta).forEach((key) => {\n          errors.push({\n            value: values[key],\n            errors: [result.meta[key]],\n            name: key,\n          });\n        });\n        setFields(errors);\n      }\n      if (result.success) {\n        setSuccess(1);\n      }\n    } catch (err) {\n      setSubmitting(0);\n    }\n  };\n\n  if (success) {\n    return (\n      <div>\n        <Text size=\"l\" className=\"mb30\">Thank you for signing up!</Text>\n        <Text className=\"mb30\">You can now sign in.</Text>\n        <Button as={Link} className=\"fill\" to=\"/signin\">Sign in</Button>\n      </div>\n    );\n  }\n\n  return (\n    <Form onFinish={handleSubmit} ref={formRef}>\n      <Row type=\"flex\">\n        <Col xs={24} className=\"mb30\">\n          <Text size=\"l\">Sign up</Text>\n        </Col>\n\n        <Col xs={24} sm={24} className=\"pb50 pt20\">\n          <div>\n            <Form.Item\n              {...fillField}\n              name=\"email\"\n              label=\"EMAIL\"\n              rules={[{\n                type: \"email\",\n                required: true,\n                message: \"EMAIL is required\",\n              }]}\n            >\n              <Input\n                className=\"fill\"\n                inputMode=\"email\"\n                autoCorrect=\"off\"\n                autoCapitalize=\"none\"\n                autoComplete=\"username\"\n              />\n            </Form.Item>\n            <Form.Item\n              {...fillField}\n              name=\"password\"\n              label=\"PASSWORD\"\n              rules={[{\n                required: true,\n                message: \"PASSWORD is required\",\n              }]}\n            >\n              <Input.Password autoComplete=\"new-password\" className=\"fill\" />\n            </Form.Item>\n\n            <Form.Item\n              {...fillField}\n              name=\"password_confirmation\"\n              label=\"PASSWORD CONFIRMATION\"\n              dependencies={['password']}\n              rules={[{\n                required: true,\n                message: \"PASSWORD CONFIRMATION is required\",\n              },\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    new Error(\"PASSWORD CONFIRMATION does not match\"),\n                  );\n                },\n              })]}\n            >\n              <Input.Password autoComplete=\"new-password\" className=\"fill\" />\n            </Form.Item>\n            <Form.Item noStyle shouldUpdate={() => true}>\n              {({getFieldsError}) => (\n                <Button\n                  background=\"primary\"\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"fill text-center mt20\"\n                  loading={submitting}\n                  disabled={submitting || formHasError(getFieldsError())}\n                  bold\n                >\n                  Sign up\n                </Button>\n              )}\n            </Form.Item>\n          </div>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n","import actionTypes from \"../constants/actionTypes\";\n\nimport API, {render} from \"../constants/apiEndpoints\";\nimport {dispatchRequest} from \"./ApiActions\";\n\nconst {\n  SURVEY_GET_LIST,\n  SURVEY_GET,\n  SURVEY_POST,\n  SURVEY_PUT,\n  SURVEY_DELETE,\n} = actionTypes;\n\nexport function getSurveyList(params) {\n  return dispatchRequest({\n    method: \"get\",\n    url: API[SURVEY_GET_LIST],\n    params,\n    type: SURVEY_GET_LIST,\n  });\n}\n\nexport function getSurvey(id) {\n  return dispatchRequest({\n    method: \"get\",\n    url: render(API[SURVEY_GET], {id}),\n    type: SURVEY_GET,\n    include: {\n      id,\n    },\n  });\n}\n\nexport function postSurvey(params) {\n  return dispatchRequest({\n    method: \"post\",\n    url: API[SURVEY_POST],\n    params,\n    type: SURVEY_POST,\n  });\n}\n\nexport function putSurvey(params, id) {\n  return dispatchRequest({\n    method: \"put\",\n    url: render(API[SURVEY_PUT], {id}),\n    params,\n    type: SURVEY_PUT,\n    include: {\n      id: params.id,\n    },\n  });\n}\n\nexport function deleteSurvey(id) {\n  return dispatchRequest({\n    method: \"delete\",\n    url: render(API[SURVEY_DELETE], {id}),\n    type: SURVEY_DELETE,\n    include: {\n      id,\n    },\n  });\n}\n","import React, {useRef, useState} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {Row, Col, message} from \"antd\";\n\nimport Form from \"./Form\";\nimport Button from \"./Button\";\nimport Input from \"./Input\";\nimport {history} from \"../store/configureStore\";\n\nimport {fillField, formHasError} from \"../lib/helpers\";\nimport * as SurveyActions from \"../actions/SurveyActions\";\n\nexport default ({\n  initialValues,\n}) => {\n  const dispatch = useDispatch();\n  const [submitting, setSubmitting] = useState(0);\n  const formRef = useRef();\n  const handleSubmit = async () => {\n    const {\n      validateFields,\n    } = formRef.current;\n    setSubmitting(1);\n    try {\n      const values = await validateFields();\n      await (values.id ? (\n        dispatch(SurveyActions.putSurvey({\n          id: values.id,\n          title: values.title,\n          Options: values.Options.map((Option) => ({\n            id: Option.id,\n            title: Option.title,\n          })),\n        }, values.id))\n      ) : (\n        dispatch(SurveyActions.postSurvey(values))\n      ));\n      setSubmitting(0);\n\n      if (initialValues && initialValues.id) {\n        message.success(\"Survey has been updated\");\n      } else {\n        message.success(\"New survey has been created\");\n      }\n      history.push(\"/\");\n    } catch (err) {\n      setSubmitting(0);\n    }\n  };\n\n  return (\n    <Form onFinish={handleSubmit} ref={formRef} initialValues={initialValues}>\n      <Row type=\"flex\">\n        <Col xs={24} sm={24} className=\"pb50 pt20\">\n          <div>\n            <Form.Item noStyle name=\"id\">\n              <Input type=\"hidden\" />\n            </Form.Item>\n\n            <Form.Item\n              {...fillField}\n              name=\"title\"\n              label=\"QUESTION\"\n              rules={[{\n                required: true,\n                message: \"QUESTION is required\",\n              }]}\n            >\n              <Input\n                className=\"fill\"\n                autoCorrect=\"off\"\n                autoCapitalize=\"none\"\n              />\n            </Form.Item>\n            <Form.List\n              name=\"Options\"\n              rules={[{\n                required: true,\n                message: \"OPTIONS is required\",\n              }]}\n            >\n              {(fields, { add }, { errors }) => (\n                <>\n                  {fields.map((field, index) => (\n                    <Form.Item\n                      {...fillField}\n                      key={index}\n                      name={[field.key, \"title\"]}\n                      label={(\n                        <div className=\"flex-h\">\n                          <div className=\"flex-1\">{`OPTION ${index + 1}`}</div>\n                          <div>\n                            <Button\n                              htmlType=\"button\"\n                              size=\"xs\"\n                              onClick={() => {\n                                const {\n                                  current: {\n                                    getFieldsValue,\n                                    setFieldsValue,\n                                  },\n                                } = formRef;\n                                const Options = getFieldsValue().Options || [];\n                                Options.splice(index, 1);\n                                setFieldsValue({Options});\n                              }}\n                            >\n                              Remove\n                            </Button>\n                          </div>\n                        </div>\n                      )}\n                      rules={[{\n                        required: true,\n                        message: \"OPTION is required\",\n                      }]}\n                    >\n                      <Input\n                        className=\"fill\"\n                        autoCorrect=\"off\"\n                        autoCapitalize=\"none\"\n                      />\n                    </Form.Item>\n                  ))}\n                  <div className=\"text-center mt10\">\n                    <Button\n                      size=\"s\"\n                      htmlType=\"button\"\n                      onClick={() => {\n                        add();\n                      }}\n                    >\n                      Add Option\n                    </Button>\n                  </div>\n                  <Form.ErrorList errors={errors} />\n                </>\n              )}\n            </Form.List>\n          </div>\n\n          <Form.Item noStyle shouldUpdate={() => true}>\n            {({getFieldsError}) => (\n              <Button\n                background=\"primary\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"fill text-center mt20\"\n                loading={submitting}\n                disabled={submitting || formHasError(getFieldsError())}\n                bold\n              >\n                {initialValues && initialValues.id ? \"Update Survey\" : \"Create Survey\"}\n              </Button>\n            )}\n          </Form.Item>\n\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {LoadingOutlined} from \"@ant-design/icons\";\n\nimport Text from \"./Text\";\n\nexport default () => (\n  <LoadingWrapper className=\"flex-v flex-center p15\">\n    <Text size=\"xl\"><LoadingOutlined /></Text>\n  </LoadingWrapper>\n);\n\nconst LoadingWrapper = styled.div`\n  text-align: center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgba(255, 255, 255, 0.5);\n`;\n","import actionTypes from \"../constants/actionTypes\";\n\nimport API from \"../constants/apiEndpoints\";\nimport {dispatchRequest} from \"./ApiActions\";\n\nconst {\n  AUDIENCE_POST,\n  AUDIENCE_GET_LIST,\n  AUDIENCE_POST_INVITE,\n} = actionTypes;\n\nexport const getAudience = () => JSON.parse(localStorage.getItem(\"audience\")) || {};\nexport const setAudience = (audience) => localStorage.setItem(\"audience\", JSON.stringify(audience));\n\nexport function postAudience(params) {\n  return dispatchRequest({\n    method: \"post\",\n    url: API[AUDIENCE_POST],\n    params,\n    type: AUDIENCE_POST,\n  });\n}\n\nexport function getAudienceList(params) {\n  return dispatchRequest({\n    method: \"get\",\n    url: API[AUDIENCE_GET_LIST],\n    params,\n    type: AUDIENCE_GET_LIST,\n  });\n}\n\nexport function postAudienceInvite(params) {\n  return dispatchRequest({\n    method: \"post\",\n    url: API[AUDIENCE_POST_INVITE],\n    params,\n    type: AUDIENCE_POST_INVITE,\n  });\n}\n","import React, {useRef, useState} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {Form} from \"antd\";\n\nimport Button from \"./Button\";\nimport Input from \"./Input\";\n\nimport * as AudienceActions from \"../actions/AudienceActions\";\nimport * as SurveyActions from \"../actions/SurveyActions\";\n\nimport {fillField, formHasError} from \"../lib/helpers\";\n\nexport default ({\n  initialValues,\n  questionId,\n  onCancel,\n}) => {\n  const dispatch = useDispatch();\n  const [submitting, setSubmitting] = useState(0);\n  const formRef = useRef();\n\n  const handleSubmit = () => {\n    const {\n      validateFields,\n    } = formRef.current;\n\n    setSubmitting(1);\n    validateFields().then(async (values) => {\n      await dispatch(AudienceActions.postAudience(values));\n      setSubmitting(0);\n      await dispatch(SurveyActions.getSurvey(questionId));\n      AudienceActions.setAudience(values);\n      if (onCancel) {\n        onCancel();\n      }\n    }).catch(() => {\n      setSubmitting(0);\n      if (onCancel) {\n        onCancel();\n      }\n    });\n  };\n\n  return (\n    <Form\n      onFinish={handleSubmit}\n      ref={formRef}\n      initialValues={initialValues}\n    >\n      <div xs={24} sm={24} className=\"pb30 pt20\">\n        <Form.Item\n          noStyle\n          name=\"OptionId\"\n          rules={[{\n            required: true,\n            message: \"OptionId is required\",\n          }]}\n        >\n          <Input type=\"hidden\" />\n        </Form.Item>\n\n        <Form.Item\n          {...fillField}\n          name=\"name\"\n          label=\"NAME\"\n          rules={[{\n            required: true,\n            message: \"NAME is required\",\n          }]}\n        >\n          <Input\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            autoComplete={1}\n            className=\"fill\"\n          />\n        </Form.Item>\n        <Form.Item\n          {...fillField}\n          name=\"email\"\n          label=\"EMAIL\"\n          rules={[{\n            type: \"email\",\n            required: true,\n            message: \"EMAIL is required\",\n          }]}\n        >\n          <Input\n            inputMode=\"email\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            autoComplete={1}\n            type=\"email\"\n            className=\"fill\"\n          />\n        </Form.Item>\n\n        <div className=\"text-center\">\n          <Form.Item noStyle shouldUpdate={() => true}>\n            {({getFieldsError}) => (\n              <div>\n                <Button\n                  background=\"primary\"\n                  disabled={submitting || formHasError(getFieldsError())}\n                  loading={submitting}\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"fill\"\n                  width=\"220px\"\n                  bold\n                >\n                  Submit\n                </Button>\n              </div>\n            )}\n          </Form.Item>\n        </div>\n      </div>\n    </Form>\n  );\n};\n","import React, {useRef, useState, useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Form} from \"antd\";\n\nimport Button from \"./Button\";\nimport {Select} from \"./Input\";\n\nimport * as AudienceActions from \"../actions/AudienceActions\";\n\nimport {fillField, formHasError} from \"../lib/helpers\";\n\nexport default ({\n  questionId,\n  initialValues,\n  onCancel,\n}) => {\n  const dispatch = useDispatch();\n  const [submitting, setSubmitting] = useState(0);\n  const getAudienceList = useSelector(state => state.audience.get(\"getAudienceList\"));\n  const formRef = useRef();\n\n  const handleSubmit = () => {\n    const {\n      validateFields,\n    } = formRef.current;\n\n    setSubmitting(1);\n    validateFields().then(async (values) => {\n      await dispatch(AudienceActions.postAudienceInvite({\n        ...values,\n        questionId,\n      }));\n      setSubmitting(0);\n      if (onCancel) {\n        onCancel();\n      }\n    }).catch(() => {\n      setSubmitting(0);\n      if (onCancel) {\n        onCancel();\n      }\n    });\n  };\n\n  const getAudiences = async () => {\n    await dispatch(AudienceActions.getAudienceList());\n  };\n\n  useEffect(async () => {\n    getAudiences();\n  }, []);\n\n  const audiences = getAudienceList.toIndexedSeq().toArray();\n\n  return (\n    <Form\n      onFinish={handleSubmit}\n      ref={formRef}\n      initialValues={initialValues}\n    >\n      <div xs={24} sm={24} className=\"pb30 pt20\">\n        <Form.Item\n          {...fillField}\n          name=\"emails\"\n          label=\"EMAIL ADDRESSES\"\n        >\n          <Select\n            mode=\"tags\"\n            placeholder=\"Please select\"\n          >\n            {audiences.map((audience) => (\n              <Select.Option key={audience.email}>{audience.email}</Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n\n        <div className=\"text-center\">\n          <Form.Item noStyle shouldUpdate={() => true}>\n            {({getFieldsError}) => (\n              <div>\n                <Button\n                  background=\"primary\"\n                  disabled={submitting || formHasError(getFieldsError())}\n                  loading={submitting}\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"fill\"\n                  width=\"220px\"\n                  bold\n                >\n                  Invite\n                </Button>\n              </div>\n            )}\n          </Form.Item>\n        </div>\n      </div>\n    </Form>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {Progress} from \"antd\";\nimport {CheckCircleTwoTone, BorderOutlined} from \"@ant-design/icons\";\n\nimport Text from \"./Text\";\n\nexport default ({\n  option,\n  totalAnswers,\n  audienceAnswer,\n  onClick,\n}) => {\n  const percentage = ((option.Answers.length / totalAnswers) * 100).toFixed(0);\n  const isOptionAnswer = audienceAnswer && audienceAnswer.OptionId === option.id;\n  return (\n    <OptionButton\n      onClick={onClick}\n      disabled={audienceAnswer}\n      className=\"flex-h flex-center\"\n    >\n      <OptionIcon size=\"m\" className=\"mr20 flex-v\" color=\"gray\">\n        {audienceAnswer ? (\n          <div className=\"flex-v text-right\">\n            <Text bold>{`${percentage}%`}</Text>\n            <Text>{isOptionAnswer ? <CheckCircleTwoTone twoToneColor=\"#52c41a\" /> : \"　\"}</Text>\n          </div>\n        ) : (\n          <BorderOutlined style={{color: \"#ddd\"}} />\n        )}\n      </OptionIcon>\n      <div className=\"flex-1 text-left\">\n        <Text>{option.title}</Text>\n        {audienceAnswer && (\n          <div className=\"flex-h\">\n            <div className=\"flex-1\"><Progress percent={percentage} showInfo={false} /></div>\n          </div>\n        )}\n      </div>\n    </OptionButton>\n  );\n};\n\nconst OptionButton = styled.button`\n  width: 100%;\n  background: white;\n  outline: none;\n  border: 0;\n  padding: 10px 20px;\n  border-bottom: 1px solid #ddd;\n  min-height: 60px;\n\n  &:enabled {\n    &:hover {\n      background: #f9f9f9;\n      cursor: pointer;\n    }\n  }\n\n  &:last-child {\n    border-bottom: 0;\n  }\n`;\n\nconst OptionIcon = styled.div`\n  width: 40px;\n  text-align: center;\n`;\n","import React, {useState} from 'react';\nimport styled from \"styled-components\";\nimport {Modal} from \"antd\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {ExclamationCircleOutlined} from \"@ant-design/icons\";\n\nimport Text from \"./Text\";\nimport Loading from \"./Loading\";\nimport Button from \"./Button\";\nimport AudienceForm from \"./AudienceForm\";\nimport SurveyInviteForm from \"./SurveyInviteForm\";\nimport OptionButton from \"./OptionButton\";\n\nimport * as AudienceActions from \"../actions/AudienceActions\";\nimport {history} from \"../store/configureStore\";\nimport * as SurveyActions from \"../actions/SurveyActions\";\n\nexport default ({\n  survey,\n}) => {\n  const dispatch = useDispatch();\n  const [submitting, setSubmitting] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [inviteModal, setInviteModal] = useState(false);\n  const getMe = useSelector(state => state.auth.get(\"getMe\"));\n\n  const handleClick = async (option) => {\n    setSubmitting(true);\n    const {name, email} = AudienceActions.getAudience();\n    const values = {OptionId: option.id, email, name};\n    if (!name || !email) {\n      setModal(values);\n    } else {\n      await dispatch(AudienceActions.postAudience(values));\n      await dispatch(SurveyActions.getSurvey(survey.id));\n      AudienceActions.setAudience(values);\n    }\n    setSubmitting(false);\n  };\n\n  const {email} = AudienceActions.getAudience();\n  let audienceAnswer;\n  const totalAnswers = survey.Options.reduce((acc, Option) => {\n    if (!audienceAnswer) {\n      audienceAnswer = Option.Answers.find((answer) => answer.Audience.email === email);\n    }\n    return acc + Option.Answers.length;\n  }, 0);\n\n  const remove = () => {\n    Modal.confirm({\n      title: 'Do you want to delete these items?',\n      icon: <ExclamationCircleOutlined />,\n      onOk: async () => {\n        await dispatch(SurveyActions.deleteSurvey(survey.id));\n      },\n      onCancel() {\n      },\n    });\n  };\n\n  return (\n    <SurveyWrapper>\n      {submitting && <Loading />}\n      <Question className=\"flex-h flex-center\">\n        <Text size=\"m\" className=\"flex-1\">{survey.title}</Text>\n      </Question>\n      <Modal\n        onCancel={() => setModal(false)}\n        title=\"Enter your name and email to participate\"\n        visible={modal}\n        footer={false}\n      >\n        {modal && (\n          <AudienceForm\n            initialValues={modal}\n            questionId={survey.id}\n            onCancel={() => setModal(false)}\n          />\n        )}\n      </Modal>\n      <Modal\n        onCancel={() => setInviteModal(false)}\n        title=\"Invite by email\"\n        visible={inviteModal}\n        footer={false}\n      >\n        {inviteModal && (\n          <SurveyInviteForm\n            initialValues={inviteModal}\n            questionId={survey.id}\n            onCancel={() => setInviteModal(false)}\n          />\n        )}\n      </Modal>\n\n      {survey.Options.map((option) => (\n        <OptionButton\n          option={option}\n          totalAnswers={totalAnswers}\n          audienceAnswer={audienceAnswer}\n          onClick={() => {\n            handleClick(option);\n          }}\n          key={option.id}\n        />\n      ))}\n      {(audienceAnswer || getMe) && (\n        <div className=\"ph30 pv10 text-center flex-h\">\n          {audienceAnswer && (<Text className=\"mr5\" color=\"gray\">{`${totalAnswers} answers`}</Text>)}\n          <div className=\"flex-h flex-end flex-1\">\n            <div className=\"mr5\">\n              <Button\n                size=\"s\"\n                onClick={() => history.push(`/survey/${survey.id}`)}\n              >\n                Details\n              </Button>\n            </div>\n            {getMe && (\n              <>\n                <div className=\"mr5\">\n                  <Button\n                    size=\"s\"\n                    onClick={() => history.push(`/survey/${survey.id}/update`)}\n                  >\n                    Edit\n                  </Button>\n                </div>\n                <div className=\"mr5\">\n                  <Button\n                    size=\"s\"\n                    onClick={remove}\n                  >\n                    Delete\n                  </Button>\n                </div>\n                <div>\n                  <Button\n                    size=\"s\"\n                    onClick={() => setInviteModal(true)}\n                  >\n                    Dispatch by Email\n                  </Button>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </SurveyWrapper>\n  );\n};\n\nconst SurveyWrapper = styled.div`\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  background: ${props => props.theme.boxBgColor};\n  border-radius: 3px;\n  margin-bottom: 30px;\n  position: relative;\n`;\n\nconst Question = styled.div`\n  border-bottom: 1px solid #ccc;\n  padding: 20px 20px;\n`;\n","import React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {ProfileOutlined} from '@ant-design/icons';\nimport {Pagination} from \"antd\";\n\nimport * as SurveyActions from \"../actions/SurveyActions\";\nimport {history} from \"../store/configureStore\";\n\nimport Survey from \"./Survey\";\nimport Text from \"./Text\";\n\nexport default ({\n  page = 1,\n  limit = 20,\n}) => {\n  const dispatch = useDispatch();\n  const getListSurvey = useSelector(state => state.survey.get(\"getListSurvey\"));\n  const surveyPagination = useSelector(state => state.survey.get(\"surveyPagination\"));\n\n  useEffect(() => {\n    dispatch(SurveyActions.getSurveyList({page, limit}));\n  }, [page, limit]);\n\n  const surveys = getListSurvey.toIndexedSeq().toArray();\n  return (\n    <div>\n      {!surveys.length && (\n        <Text size=\"xxl\" color=\"gray\" className=\"text-center mt30\">\n          <div><ProfileOutlined /></div>\n          <Text size=\"xs\">Survey list is empty, please add some new surveys</Text>\n        </Text>\n      )}\n      {surveys.map((survey) => (\n        <Survey survey={survey} key={survey.id} />\n      ))}\n      {surveyPagination.total > limit && (\n        <Pagination\n          defaultCurrent={page}\n          pageSize={limit}\n          onChange={(page, limit) => history.push(`/?page=${page}&limit=${limit}`)}\n          total={surveyPagination.total}\n        />\n      )}\n    </div>\n  );\n};\n","// @flow\n\nimport BasePage from \"./pages/BasePage\";\n\nimport SigninPage from \"./pages/SigninPage\";\nimport SignupPage from \"./pages/SignupPage\";\nimport LogoutPage from \"./pages/LogoutPage\";\n\nimport SurveyCreatePage from \"./pages/SurveyCreatePage\";\nimport SurveyUpdatePage from \"./pages/SurveyUpdatePage\";\nimport SurveyListPage from \"./pages/SurveyListPage\";\nimport SurveyPage from \"./pages/SurveyPage\";\n\nexport default [{\n  path: \"/\",\n  component: BasePage,\n  routes: [{\n    path: \"/\",\n    component: SurveyListPage,\n    exact: true,\n  }, {\n    path: \"/signup\",\n    component: SignupPage,\n    exact: true,\n  }, {\n    path: \"/signin\",\n    component: SigninPage,\n    exact: true,\n  }, {\n    path: \"/logout\",\n    component: LogoutPage,\n    exact: true,\n  }, {\n    path: \"/survey/create\",\n    component: SurveyCreatePage,\n    exact: true,\n  }, {\n    path: \"/survey/:id(\\\\d+)\",\n    component: SurveyPage,\n    exact: true,\n  }, {\n    path: \"/survey/:id/update\",\n    component: SurveyUpdatePage,\n    exact: true,\n  }],\n}];\n","import React from 'react';\nimport Helmet from \"react-helmet\";\n\nimport {Content} from \"../components/Layout\";\nimport SurveyList from \"../components/SurveyList\";\nimport {getQuery} from \"../lib/helpers\";\nimport {history} from \"../store/configureStore\";\n\nexport default () => {\n  const query = getQuery(history.location);\n  const {\n    limit,\n    page = 1,\n  } = query;\n\n  return (\n    <Content className=\"mt130\">\n      <Helmet title=\"Surveys\" />\n      <SurveyList\n        limit={limit}\n        page={page}\n      />\n    </Content>\n  );\n};\n","import React from 'react';\nimport Helmet from \"react-helmet\";\n\nimport {Content, AuthBox} from \"../components/Layout\";\nimport SignupForm from \"../components/SignupForm\";\n\nexport default () => (\n  <Content className=\"mt130\">\n    <Helmet title=\"Sign up\" />\n    <AuthBox>\n      <SignupForm />\n    </AuthBox>\n  </Content>\n);\n","import React from 'react';\nimport Helmet from \"react-helmet\";\n\nimport {Content, AuthBox} from \"../components/Layout\";\nimport SigninForm from \"../components/SigninForm\";\n\nexport default () => (\n  <Content className=\"mt130\">\n    <Helmet title=\"Sign in\" />\n    <AuthBox>\n      <SigninForm />\n    </AuthBox>\n  </Content>\n);\n","import React, {useEffect} from \"react\";\nimport Helmet from \"react-helmet\";\nimport {useDispatch} from \"react-redux\";\n\nimport {Content} from \"../components/Layout\";\nimport * as AuthActions from \"../actions/AuthActions\";\nimport {history} from \"../store/configureStore\";\n\nexport default () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(AuthActions.postLogout());\n    history.push(\"/\");\n  });\n\n  return (\n    <Content>\n      <Helmet title=\"Logout\" />\n      <div>Logging out</div>\n    </Content>\n  );\n};\n","import React from 'react';\nimport Helmet from \"react-helmet\";\n\nimport {Content, AuthBox} from \"../components/Layout\";\nimport SurveyForm from \"../components/SurveyForm\";\nimport Text from \"../components/Text\";\n\nexport default () => (\n  <Content className=\"mt130\">\n    <Helmet title=\"Create Survey\" />\n    <AuthBox>\n      <Text size=\"l\" className=\"mb30\">Create Survey</Text>\n      <SurveyForm />\n    </AuthBox>\n  </Content>\n);\n","import React, {useEffect} from \"react\";\nimport Helmet from \"react-helmet\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport {Content} from \"../components/Layout\";\nimport Loading from \"../components/Loading\";\nimport Survey from \"../components/Survey\";\nimport * as SurveyActions from \"../actions/SurveyActions\";\n\nexport default ({\n  match: {\n    params: {\n      id,\n    },\n  },\n}) => {\n  const dispatch = useDispatch();\n  const survey = useSelector(state => state.survey.get(\"getListSurvey\").get(Number(id)));\n\n  useEffect(() => {\n    dispatch(SurveyActions.getSurvey(id));\n  }, []);\n\n  return (\n    <Content className=\"mt130\">\n      {survey && <Helmet title={survey.title} />}\n      {survey ? <Survey survey={survey} /> : <Loading />}\n    </Content>\n  );\n};\n","import React, {useEffect} from 'react';\nimport Helmet from \"react-helmet\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport {Content, AuthBox} from \"../components/Layout\";\nimport SurveyForm from \"../components/SurveyForm\";\nimport Text from \"../components/Text\";\n\nimport Loading from \"../components/Loading\";\nimport * as SurveyActions from \"../actions/SurveyActions\";\n\nexport default ({\n  match: {\n    params: {\n      id,\n    },\n  },\n}) => {\n  const dispatch = useDispatch();\n  const survey = useSelector(state => state.survey.get(\"getListSurvey\").get(Number(id)));\n\n  useEffect(() => {\n    dispatch(SurveyActions.getSurvey(id));\n  }, []);\n\n  return (\n    <Content className=\"mt130\">\n      <Helmet title=\"Update Survey\" />\n      <AuthBox>\n        {survey ? (\n          <>\n            <Text size=\"l\" className=\"mb30\">Update Survey</Text>\n            <SurveyForm initialValues={survey} />\n          </>\n        ) : (\n          <Loading />\n        )}\n      </AuthBox>\n    </Content>\n  );\n};\n","import React from 'react';\nimport Helmet from \"react-helmet\";\n\nimport {Layout, ConfigProvider} from \"antd\";\nimport enUS from 'antd/lib/locale-provider/en_US';\nimport {Switch } from 'react-router-dom';\n\nimport GlobalStyle from \"./styles/GlobalStyle\";\n\nimport {\n  RouteWithSubRoutes,\n} from \"./lib/helpers\";\nimport routes from \"./routes\";\n\nexport default () => (\n  <ConfigProvider locale={enUS}>\n    <GlobalStyle />\n    <Layout className=\"App\">\n      <Helmet\n        defaultTitle=\"Survey\"\n        titleTemplate=\"%s - Survey\"\n      />\n      {routes.map((route, i) => (\n        <Switch key={i}>\n          <RouteWithSubRoutes\n            key={i}\n            {...route}\n          />\n        </Switch>\n      ))}\n    </Layout>\n  </ConfigProvider>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport {Provider} from \"react-redux\";\nimport {ThemeProvider} from \"styled-components\";\n\nimport 'antd/dist/antd.css';\n\nimport App from './App';\nimport configureStore, {history} from \"./store/configureStore\";\nimport routes from \"./routes\";\nimport theme from \"./styles/theme\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <App routes={routes} />\n      </ConnectedRouter>\n    </Provider>\n  </ThemeProvider>,\n  (document.getElementById('root'): any),\n);\n","export default {\n  contentWidth: 780,\n  headerHeight: \"40px\",\n  fontFamily: `\"Open Sans\", sans-serif`,\n  headerColor: \"#333\",\n  boxBgColor: \"#fff\",\n};\n"],"sourceRoot":""}